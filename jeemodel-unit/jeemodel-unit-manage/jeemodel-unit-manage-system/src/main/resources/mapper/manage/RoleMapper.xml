<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeemodel.unit.manage.mapper.RoleMapper">

	<resultMap type="Role" id="RoleResult">
		<id     property="id"             column="id"               />
		<result property="roleName"           column="role_name"             />
		<result property="roleKey"            column="role_key"              />
		<result property="roleSort"           column="role_sort"             />
		<result property="dataScope"          column="data_scope"            />
		<result property="menuCheckStrictly"  column="menu_check_strictly"   />
		<result property="deptCheckStrictly"  column="dept_check_strictly"   />
		<result property="status"             column="status"                />
		<result property="delFlag"            column="del_flag"              />
		<result property="createBy"           column="create_by"             />
		<result property="createTime"         column="create_time"           />
		<result property="updateBy"           column="update_by"             />
		<result property="updateTime"         column="update_time"           />
		<result property="remark"             column="remark"                />
	</resultMap>
	
	
	<sql id="selectRoleVo">
		SELECT DISTINCT
			r.id,
			r.role_name,
			r.role_key,
			r.role_sort,
			r.data_scope,
			r.menu_check_strictly,
			r.dept_check_strictly,
			r.status,
			r.del_flag,
			r.create_time,
			r.remark 
		FROM
			manage_role r
	    left join 
	    	manage_user_role ur on ur.role_id = r.id
	    left join 
	    	manage_user u on u.id = ur.user_id
	    left join 
	    	manage_dept d on u.dept_id = d.id
    </sql>
    
    <select id="selectRoleList" parameterType="com.jeemodel.unit.manage.bean.dto.system.RoleListReq" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		where 
			r.del_flag = '0'
		<if test="role.id != null and role.id != 0">
			AND r.id = #{role.id}
		</if>
		<if test="role.roleName != null and role.roleName != ''">
			AND r.role_name like concat('%', #{role.roleName}, '%')
		</if>
		<if test="role.status != null and role.status != ''">
			AND r.status = #{role.status}
		</if>
		<if test="role.roleKey != null and role.roleKey != ''">
			AND r.role_key like concat('%', #{role.roleKey}, '%')
		</if>
		<if test="role.params.beginTime != null and role.params.beginTime != ''"><!-- 开始时间检索 -->
			and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{role.params.beginTime},'%y%m%d')
		</if>
		<if test="role.params.endTime != null and role.params.endTime != ''"><!-- 结束时间检索 -->
			and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{role.params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		<!-- ${params.dataScope} -->
		<if test="dataScopeParams != null ">
			${dataScopeParams.dataScope}
		</if>		
		
		ORDER BY 
			r.role_sort
	</select>
    
	<select id="selectRolePermissionByUserId" parameterType="Long" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		WHERE 
			r.del_flag = '0' 
		and 
			ur.user_id = #{userId}
	</select>
	
	<select id="selectRoleAll" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
	</select>
	
	<select id="selectRoleListByUserId" parameterType="Long" resultType="Long">
		select 
			r.id
        from 
        	manage_role r
	    left join 
	    	manage_user_role ur on ur.role_id = r.id
	    left join 
	    	manage_user u on u.id = ur.user_id
	    where 
	    	u.id = #{userId}
	</select>
	
	<select id="selectRoleById" parameterType="Long" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		where 
			r.id = #{id}
	</select>
	
	<select id="selectRolesByUserName" parameterType="String" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		WHERE 
			r.del_flag = '0' 
		and 
			u.user_name = #{userName}
	</select>
	
	<select id="checkRoleNameUnique" parameterType="String" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		 where 
		 	r.role_name=#{roleName} 
		 limit 1
	</select>
	
	<select id="checkRoleKeyUnique" parameterType="String" resultMap="RoleResult">
		<include refid="selectRoleVo"/>
		 where 
		 	r.role_key=#{roleKey} 
		 limit 1
	</select>
	
	
	<delete id="deleteRoleById" parameterType="Long">
		update 
			manage_role 
		set 
			del_flag = '2' 
		where 
			id = #{id}
 	</delete>
 	
 	<delete id="deleteRoleByIds" parameterType="Long">
 	    update 
 	    	manage_role 
 	    set 
 	    	del_flag = '2' 
 	    where 
 	    	id in
 		<foreach collection="array" item="id" open="(" separator="," close=")">
 			#{id}
        </foreach> 
 	</delete>
 	
</mapper> 