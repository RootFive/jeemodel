<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeemodel.unit.manage.mapper.DeptMapper">

	<resultMap type="Dept" id="DeptResult">
		<id     property="id"     column="id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<resultMap type="com.jeemodel.unit.manage.bean.dto.system.DeptTree" id="DeptTreeResult"  extends="DeptResult">
	</resultMap>

	<sql id="selectDeptVo">
        SELECT
			d.id,
			d.parent_id,
			d.ancestors,
			d.dept_name,
			d.order_num,
			d.leader,
			d.phone,
			d.email,
			d.status,
			d.del_flag,
			d.create_by,
			d.create_time 
		FROM
			manage_dept d
    </sql>
    
	<select id="selectDeptList" parameterType="Dept" resultMap="DeptTreeResult">
        <include refid="selectDeptVo"/>
        WHERE 
        	d.del_flag = '0'
		<if test="dept.id != null and dept.id != 0">
			AND id = #{dept.id}
		</if>
        <if test="dept.parentId != null and dept.parentId != 0">
			AND parent_id = #{dept.parentId}
		</if>
		<if test="dept.deptName != null and dept.deptName != ''">
			AND dept_name like concat('%', #{dept.deptName}, '%')
		</if>
		<if test="dept.status != null and dept.status != ''">
			AND status = #{dept.status}
		</if>
		<!-- 数据范围过滤 -->
		<!-- ${params.dataScope} -->
		<if test="dataScopeParams != null">
			<!-- 数据范围过滤 -->
			${dataScopeParams.dataScope}
		</if>		
		order by 
			d.parent_id, 
			d.order_num
    </select>
    
    <select id="selectDeptListByRoleId" resultType="Long">
		select 
			d.id
		from 
			manage_dept d
        left join 
        	manage_role_dept rd 
        on 
        	d.id = rd.dept_id
        where 
        	rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
          and d.id not in (
          			select 
          				d.parent_id 
          			from 
          				manage_dept d 
          			inner join 
          				manage_role_dept rd 
          			on 
          				d.id = rd.dept_id 
          			and 
          				rd.role_id = #{roleId})
        </if>
		order by 
			d.parent_id, 
			d.order_num
	</select>
    
    
    <select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select 
			count(1) 
		from 
			manage_user
		where 
			dept_id = #{deptId} 
		and 
			del_flag = '0'
	</select>
	
	<select id="selectChildrenDeptById" parameterType="Long" resultMap="DeptResult">
		select 
			* 
		from 
			manage_dept 
		where 
			find_in_set(#{id}, ancestors)
	</select>
	
	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select 
			count(*)
		from 
			manage_dept 
		where 
			status = 0 
		and 
			del_flag = '0' 
		and 
			find_in_set(#{id}, ancestors)
	</select>
	
    
	
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update manage_dept set ancestors =
	    <foreach collection="depts" item="item" index="index" separator=" " open="case id" close="end">
	        when 
	        	#{item.id} 
	        then 
	        	#{item.ancestors}
	    </foreach>
	    where 
	    	id in
	    <foreach collection="depts" item="item" index="index" separator="," open="(" close=")">
	        #{item.id}
	    </foreach>
	</update>

</mapper> 