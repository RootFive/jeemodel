<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeemodel.unit.coding.mapper.DbMySQLMapper">

	<resultMap type="GenTable" id="GenTableResult">
	    <id     property="id"        column="id"          />
		<result property="tableDb"      column="table_db"        />
		<result property="tableName"      column="table_name"        />
		<result property="tableComment"   column="table_comment"     />
		<result property="subTableName"   column="sub_table_name"    />
		<result property="subTableFkName" column="sub_table_fk_name" />
		<result property="className"      column="class_name"        />
		<result property="tplCategory"    column="tpl_category"      />
		<result property="packageName"    column="package_name"      />
		<result property="moduleName"     column="module_name"       />
		<result property="businessName"   column="business_name"     />
		<result property="functionName"   column="function_name"     />
		<result property="functionAuthor" column="function_author"   />
		<result property="genType"        column="gen_type"          />
		<result property="genPath"        column="gen_path"          />
		<result property="options"        column="options"           />
		<result property="createBy"       column="create_by"         />
		<result property="createTime"     column="create_time"       />
		<result property="updateBy"       column="update_by"         />
		<result property="updateTime"     column="update_time"       />
		<result property="remark"         column="remark"            />
		<!-- <collection  property="columns"  javaType="java.util.List"  resultMap="GenTableColumnResult" /> -->
	</resultMap>
	
	<resultMap type="GenTableColumn" id="GenTableColumnResult">
        <id     property="id"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>

	<sql id="selectGenTableVo">
		SELECT
			id,
			table_db,
			table_name,
			table_comment,
			sub_table_name,
			sub_table_fk_name,
			class_name,
			tpl_category,
			package_name,
			module_name,
			business_name,
			function_name,
			function_author,
			gen_type,
			gen_path,
			options,
			create_by,
			create_time,
			update_by,
			update_time,
			remark 
		FROM
			gen_table
    </sql>
    

	<select id="selectDbTableList" parameterType="GenTable" resultMap="GenTableResult">
		select 
			table_schema as table_db, 
			table_name, 
			table_comment, 
			create_time, 
			update_time 
		from 
			information_schema.tables t
		where 
			table_name NOT LIKE 'gen_%'
		AND 
			table_name NOT IN (select table_name from gen_table)
		<choose>
            <when test="tableSchema != null and tableSchema != ''">
            	AND  lower(t.TABLE_SCHEMA) like lower(concat('%', #{tableSchema}, '%'))
                AND  lower(t.TABLE_SCHEMA) NOT IN ('information_schema','mysql','performance_schema','sys')
            </when>
            <otherwise>
                AND  t.TABLE_SCHEMA = (SELECT DATABASE())
            </otherwise>
        </choose>

		<if test="tableName != null and tableName != ''">
			AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
		</if>
		<if test="tableComment != null and tableComment != ''">
			AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
        ORDER BY 
        	create_time 
        DESC
	</select>
	
	<select id="selectDbTableListByNames" resultMap="GenTableResult">
		SELECT 
			table_schema as table_db, 
			table_name, 
			table_comment, 
			create_time, 
			update_time 
		FROM 
			information_schema.tables
		WHERE 
			table_name NOT LIKE 'gen_%' 
		AND 
		<foreach collection="list" index="index" item="ts" open="(" close=")" separator="or">
            ( table_schema = #{ts.tableSchema} and table_name=#{ts.tableName} )
		</foreach>
	</select>
	
	
	<select id="selectDbTableColumnsByName" parameterType="com.jeemodel.unit.coding.entity.GenTable" resultMap="GenTableColumnResult">
		select 
			column_name, 
			(case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' else null end) as is_required, 
			(case when column_key = 'PRI' then '1' else '0' end) as is_pk, 
			ordinal_position as sort, 
			column_comment, 
			(case when extra = 'auto_increment' then '1' else '0' end) as is_increment, 
			column_type
		from 
			information_schema.columns 
		where 
			table_schema = #{tableDb} 
		and 
			table_name = (#{tableName})
		order by 
			ordinal_position
	</select>
	
	
</mapper>