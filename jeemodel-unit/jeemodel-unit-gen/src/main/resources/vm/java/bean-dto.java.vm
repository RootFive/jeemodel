package ${packageName}.bean.dto;

#foreach ($import in $importList)
import ${import};
#end
import com.jeemodel.bean.dto.${baseDTOType};
import com.jeemodel.bean.helper.JeeModelToStringBuilder;
import com.jeemodel.bean.annotation.Excel;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * ${functionName} 的DTO数据传输对象
 *   
 * Entity实体类对象 【${packageName}.entity.bean.${ClassName}】
 *  
#if($table.sub)
 * 【关联子表】${subTableName}，【关联关系】 ${tableName}.${subTableUseColumnName} = ${subTableName}.${subTableFkName}
 * 子表-Entity实体类对象 【${packageName}.bean.entity.${subClassName}】
 * 
#end
 * @author ${author}
 * @date ${datetime}
 */
@ApiModel(description = "${functionName}-DTO")
@Data
@EqualsAndHashCode(callSuper=true)
public class ${ClassName}DTO extends ${baseDTOType} {

##遍历Java字段以及其注释####################################################
#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
    @ApiModelProperty(value = "$column.columnComment")
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($parentheseIndex != -1)
    @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd")
    @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
#else
    @Excel(name = "${comment}")
#end
#end
    private $column.javaType $column.javaField;

#end
#end

## 重写toString方法-开始： 实体的toString()方法，使用JeeModelToStringBuilder可以避免暴内存问题####################################################
    @Override
    public String toString() {
        JeeModelToStringBuilder builder = new JeeModelToStringBuilder(this);
#foreach ($column in $columns)
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
        builder.append("${column.javaField}", get${AttrName}());
#end
        return builder.toString();
    }
## 重写toString方法-结束     
}
