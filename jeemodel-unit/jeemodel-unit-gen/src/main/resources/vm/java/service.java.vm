package ${packageName}.service;

import java.util.List;
#if($table.sub)
import ${packageName}.bean.domain.${ClassName}Inc${subClassName}Domain;
#end
import ${packageName}.bean.dto.${ClassName}EditSave;
import ${packageName}.bean.entity.${ClassName};

import com.baomidou.mybatisplus.extension.service.IService;

/**
 * ${functionName}Service接口
 * 
 * @author ${author}
 * @date ${datetime}
 */
public interface I${ClassName}Service extends IService<${ClassName}> {

    /**
     * 查询${functionName}列表
     * 
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    List<${ClassName}> select${ClassName}List(${ClassName} ${className});


    /**
     * 新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    boolean insert${ClassName}(${ClassName}EditSave ${className}EditSave);

#foreach ($column in $columns)
#if($column.javaField == 'updateTime')
    /**
     * 修改${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    boolean update${ClassName}(${ClassName}EditSave ${className}EditSave);		
#break
#end
#end	
		
	
#if($table.sub)
    /**
     * 查询${functionName}-包含关联${subClassName}子列表树局
     * 
     * @param ${pkColumn.javaField} ${functionName}主键
     * @return ${functionName}
     */
    ${ClassName}Inc${subClassName}Domain select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});


    /**
     * 批量删除${functionName}
     * 
     * @param ${pkColumn.javaField}s 需要删除的${functionName}主键集合
     * @return 结果
     */
    boolean delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaType} ...${pkColumn.javaField}s);	
	
	
#end

}
